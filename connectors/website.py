"""
[GENERATED BY CURSOR]
Script to scrape a website using the markitdown library and save the content to a Markdown file.
"""

from markitdown import MarkItDown
from loguru import logger


def scrape_website_to_markdown(url: str, output_filepath: str):
    """
    Scrapes the content of a given URL using MarkItDown and saves it to a Markdown file.

    Args:
        url: The URL of the website to scrape.
        output_filepath: The path where the Markdown file will be saved.
    """
    logger.info(f"Initializing MarkItDown...")
    md = MarkItDown()

    try:
        logger.info(f"Attempting to convert URL: {url}")
        result = md.convert(url)
        markdown_content = result.text_content

        logger.info(f"Saving content to {output_filepath}")
        with open(output_filepath, "w", encoding="utf-8") as f:
            f.write(markdown_content)
        logger.success(f"Successfully saved Markdown content to {output_filepath}")

    except Exception as e:
        logger.error(f"Failed to convert URL {url} to Markdown: {e}")


def main():
    """Main function with placeholder values."""
    # Placeholder values (as requested)
    target_url = "https://www.deeplearning.ai/the-batch/"
    output_file = "data/deeplearning_ai_homepage.md"

    scrape_website_to_markdown(target_url, output_file)


if __name__ == "__main__":
    main()
