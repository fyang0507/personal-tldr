"""
[GENERATED BY CURSOR]
This script provides functionality to interact with the Notion API.
It allows creating entries in a Notion database and adding content to pages.
"""

import os
from typing import Dict, Any, Optional, List
from dotenv import load_dotenv
from notion_client import Client
from utils.logging_config import logger

def load_api_key() -> str:
    """Load Notion API key from environment variables."""
    load_dotenv()
    api_key = os.getenv("NOTION_API_KEY")
    if not api_key:
        raise ValueError("NOTION_API_KEY not found in environment variables")
    return api_key

def create_database_entry(
    database_id: str,
    properties: Dict[str, Any],
    children_blocks: Optional[List[Dict[str, Any]]] = None
) -> Dict[str, Any]:
    """
    Create a new entry in a Notion database and optionally add content blocks to the page.
    
    Args:
        database_id: The ID of the Notion database
        properties: Dictionary of properties to set for the database entry
        children_blocks: Optional list of Notion block objects to add to the page
    
    Returns:
        Dict containing the created page information
    """
    notion = Client(auth=load_api_key())
    
    # Prepare arguments for page creation
    create_args = {
        "parent": {"database_id": database_id},
        "properties": properties
    }
    
    # If children_blocks are provided, add them directly during page creation
    # This is more efficient than creating the page and then appending blocks
    if children_blocks:
        create_args["children"] = children_blocks
        
    # Create the database entry with properties and potentially children
    page = notion.pages.create(**create_args)
    
    return page

def main():
    """Example usage of the Notion API functions."""
    # Load database ID from environment variables
    load_dotenv()
    database_id = os.getenv('NOTION_DATABASE_ID')

    properties = {
        "Name": {
            "title": [
                {
                    "text": {
                        "content": "Test Entry with Blocks"
                    }
                }
            ]
        },
        "Status": {
            "status": {
                "name": "In progress"
            }
        },
        "Date": {
            "date": {
                "start": "2025-04-08"
            }
        }
    }
    
    # Example of children blocks
    children_blocks = [
        {
            "object": "block",
            "type": "heading_2",
            "heading_2": {
                "rich_text": [{"type": "text", "text": {"content": "Section 1"}}]
            }
        },
        {
            "object": "block",
            "type": "paragraph",
            "paragraph": {
                "rich_text": [
                    {
                        "type": "text",
                        "text": {"content": "This is the first paragraph under section 1."}
                    }
                ]
            }
        },
        {
            "object": "block",
            "type": "divider",
            "divider": {}
        },
        {
            "object": "block",
            "type": "heading_2",
            "heading_2": {
                "rich_text": [{"type": "text", "text": {"content": "Section 2"}}]
            }
        }
    ]
    
    try:
        page = create_database_entry(database_id, properties, children_blocks)
        logger.info(f"Successfully created page with blocks: {page['url']}")
    except Exception as e:
        logger.error(f"Failed to create Notion entry: {e}")

if __name__ == "__main__":
    main() 
