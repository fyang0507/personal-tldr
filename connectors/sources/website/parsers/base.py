"""
[GENERATED BY CURSOR]
Base class for website content parsers.

This module defines the abstract base class `BaseParser` that all specific
website parsers should inherit from. It enforces a common interface for
extracting catalogue information and main content from HTML.
"""
from abc import ABC, abstractmethod
from typing import Optional, Dict, Any

class BaseParser(ABC):
    """
    Abstract Base Class for website parsers.

    Concrete implementations must provide methods to extract catalogue-like
    information (e.g., lists of articles) and the main content (e.g.,
    title and body) from HTML.
    """

    @abstractmethod
    def extract_catalogue(self, html_content: str, base_url: Optional[str] = None) -> Optional[Any]:
        """
        Extracts catalogue-like information from HTML content.

        This method is intended for pages that list multiple items, such as
        an author's article list or a category page.

        Args:
            html_content (str): The HTML content of the page.
            base_url (Optional[str]): The base URL to resolve relative links, if applicable.
                                      Defaults to None.

        Returns:
            Optional[Any]: Parsed catalogue data. The exact structure can vary
                           (e.g., a list of dictionaries, a JSON string).
                           Returns None if extraction fails or is not applicable.
        """
        pass

    @abstractmethod
    def extract_content(self, html_content: str) -> Optional[Dict[str, str]]:
        """
        Extracts the main content from an HTML page.

        This method is intended for pages that represent a single piece of
        content, such as an article or a blog post.

        Args:
            html_content (str): The HTML content of the article page.

        Returns:
            Optional[Dict[str, str]]: A dictionary containing extracted content,
                                      typically with keys like 'title' and 'content'.
                                      Returns None if extraction fails.
        """
        pass 