"""
[Generated by Cursor]
This script processes YouTube video metadata using OpenAI's API and prompts from preprocess.toml.
It cleans and structures the YouTube video metadata according to the specified format.
"""

import os
import json
import tomllib
from datetime import datetime
from openai import OpenAI
from dotenv import load_dotenv

def json_datetime_serializer(obj):
    """JSON serializer for objects not serializable by default json code"""
    if isinstance(obj, datetime):
        return obj.isoformat()
    raise TypeError ("Type %s not serializable" % type(obj))

def load_prompt_config():
    """Load the prompt configuration from the TOML file."""
    with open("prompts/preprocess.toml", "rb") as f:
        config = tomllib.load(f)
    return config["default"]["system"], config["default"]["model"]

def load_openai_client():
    """Load the OpenAI client."""
    load_dotenv()
    return OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def process_data(client, raw_data):
    """
    Process data using OpenAI API.
    
    Args:
        raw_data (dict): Raw video metadata
        
    Returns:
        dict: Processed and cleaned video metadata
    """    
    # Load prompt configuration
    system_prompt, model = load_prompt_config()
    
    # Prepare the user message with the raw data
    user_message = f"{json.dumps(raw_data, indent=2, default=json_datetime_serializer)}"
    
    # Call OpenAI API
    response = client.chat.completions.create(
        model=model,
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_message}
        ],
        temperature=0.0
    )
    
    # Parse the response
    try:
        processed_data = json.loads(response.choices[0].message.content)
        return processed_data
    except json.JSONDecodeError as e:
        print(f"Error parsing OpenAI response: {e}")
        return None

def main():
    """Main function to process YouTube data."""
    # Example data structure from youtube.py's main() function
    example_data = {
        'title': 'Example Video Title',
        'description': 'This is an example video description with some promotional content and links.',
        'published_at': '2025-04-05 01:05:05',
        'video_id': 'example_video_id',
        'url': 'https://www.youtube.com/watch?v=example_video_id',
        'thumbnail_url': 'https://example.com/thumbnail.jpg',
        'duration': 'PT1H30M',
        'view_count': '1000000',
        'like_count': '10000',
        'comment_count': '500'
    }
    
    client = load_openai_client()
    # Process the data
    processed_data = process_data(client, example_data)
    print(processed_data)


if __name__ == "__main__":
    main()
