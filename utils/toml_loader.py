#!/usr/bin/env python
# [GENERATED BY CURSOR]
"""
Centralized TOML file loader for the project.

This module provides a generic function to load TOML configuration files
with proper error handling and logging.
"""

import tomllib
from pathlib import Path
from loguru import logger


def load_toml_file(file_path: str | Path) -> dict:
    """
    Load a TOML file and return its contents as a dictionary.
    
    Args:
        file_path: Path to the TOML file (string or Path object)
        
    Returns:
        dict: The contents of the TOML file as a dictionary
        
    Raises:
        FileNotFoundError: If the file does not exist
        tomllib.TOMLDecodeError: If the file is not valid TOML
    """
    file_path = Path(file_path)
    
    try:
        with open(file_path, "rb") as f:
            return tomllib.load(f)
    except FileNotFoundError:
        logger.error(f"TOML file not found: {file_path}")
        raise
    except tomllib.TOMLDecodeError as e:
        logger.error(f"Error decoding TOML file {file_path}: {e}")
        raise
    except Exception as e:
        logger.error(f"Unexpected error loading TOML file {file_path}: {e}")
        raise 