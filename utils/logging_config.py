"""
[GENERATED BY CURSOR]
Centralized logging configuration for all modules.
This module configures loguru to write logs to the console and error logs to a file.
"""

import sys
from loguru import logger
from datetime import datetime
import pathlib

def setup_logging():
    """
    Configure loguru logger to write error logs to a file in the data directory.
    This function is intended to be called once during application initialization.
    """
    # Ensure data directory exists
    data_dir = pathlib.Path("data")
    data_dir.mkdir(exist_ok=True)
    
    # Generate log filename with current date
    log_file = data_dir / f"app_errors_{datetime.now().strftime('%Y-%m-%d')}.log"
    
    # Remove default handler and add custom handlers
    logger.remove()
    
    # Add stdout handler for all levels
    logger.add(sys.stdout, level="INFO")
    
    # Add file handler for ERROR and above
    logger.add(
        log_file,
        level="ERROR",
        rotation="1 day",
        retention="1 week",
        format="{time:YYYY-MM-DD HH:mm:ss} | {level} | {module}:{function}:{line} | {message}"
    )
    
    return log_file

# Initialize logging when this module is imported
log_file = setup_logging()
logger.info(f"Error logs will be saved to: {log_file}") 